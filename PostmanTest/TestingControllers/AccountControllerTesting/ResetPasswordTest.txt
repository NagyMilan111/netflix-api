1. Successful Password Reset
Test: Valid email, token, and matching password fields are provided.
Method: POST
URL: /api/account/reset-password
Body (JSON):
json
Copy code
{
  "email": "user1@example.com",
  "password": "newSecurePassword123",
  "password_confirmation": "newSecurePassword123",
  "token": "validToken"
}
Expected Response: 200 OK
json
Copy code
{
  "message": "Password reset successfully"
}
2. Missing Required Fields
Test: Missing one or more required fields.
Method: POST
URL: /api/account/reset-password
Body (JSON):
json
Copy code
{
  "email": "",
  "password": "",
  "password_confirmation": "",
  "token": ""
}
Expected Response: 422 Unprocessable Entity
json
Copy code
{
  "errors": {
    "email": ["The email field is required."],
    "password": ["The password field is required."],
    "token": ["The token field is required."]
  }
}
3. Invalid Email Format
Test: Email is not in a valid format.
Method: POST
URL: /api/account/reset-password
Body (JSON):
json
Copy code
{
  "email": "invalidEmail",
  "password": "newSecurePassword123",
  "password_confirmation": "newSecurePassword123",
  "token": "validToken"
}
Expected Response: 422 Unprocessable Entity
json
Copy code
{
  "errors": {
    "email": ["The email must be a valid email address."]
  }
}
4. Password Confirmation Mismatch
Test: Password and password confirmation do not match.
Method: POST
URL: /api/account/reset-password
Body (JSON):
json
Copy code
{
  "email": "user1@example.com",
  "password": "newSecurePassword123",
  "password_confirmation": "mismatchPassword123",
  "token": "validToken"
}
Expected Response: 422 Unprocessable Entity
json
Copy code
{
  "errors": {
    "password": ["The password confirmation does not match."]
  }
}
5. Invalid Token
Test: Token is invalid or expired.
Method: POST
URL: /api/account/reset-password
Body (JSON):
json
Copy code
{
  "email": "user1@example.com",
  "password": "newSecurePassword123",
  "password_confirmation": "newSecurePassword123",
  "token": "invalidToken"
}
Expected Response: 400 Bad Request
json
Copy code
{
  "error": "Invalid token or email"
}
6. Non-Existent Email
Test: Email does not exist in the password_resets or Account table.
Method: POST
URL: /api/account/reset-password
Body (JSON):
json
Copy code
{
  "email": "nonexistent@example.com",
  "password": "newSecurePassword123",
  "password_confirmation": "newSecurePassword123",
  "token": "validToken"
}
Expected Response: 400 Bad Request
json
Copy code
{
  "error": "Invalid token or email"
}