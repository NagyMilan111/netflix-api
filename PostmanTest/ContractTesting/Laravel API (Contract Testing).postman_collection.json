{
	"info": {
		"_postman_id": "c72ec9d2-72c9-4fb7-b7b5-9067cc1fa91c",
		"name": "Laravel API (Contract Testing)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40904394"
	},
	"item": [
		{
			"name": "AccountController",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login API - Response status is correct\", function () {\r",
									"    pm.expect([200, 401, 404]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"pm.test(\"Login API - Validate Response Structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Define expected schema for a successful login\r",
									"    var loginSuccessSchema = {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"token\": { \"type\": \"string\" },\r",
									"            \"user\": {\r",
									"                \"type\": \"object\",\r",
									"                \"properties\": {\r",
									"                    \"account_id\": { \"type\": \"integer\" },\r",
									"                    \"email\": { \"type\": \"string\" }\r",
									"                },\r",
									"                \"required\": [\"account_id\", \"email\"]\r",
									"            },\r",
									"            \"message\": { \"type\": \"string\" }\r",
									"        },\r",
									"        \"required\": [\"token\", \"user\", \"message\"]\r",
									"    };\r",
									"\r",
									"    // Define schema for login failure (incorrect password, blocked, not found)\r",
									"    var loginErrorSchema = {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"error\": { \"type\": \"string\" }\r",
									"        },\r",
									"        \"required\": [\"error\"]\r",
									"    };\r",
									"\r",
									"    // Validate response format based on status\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(tv4.validate(jsonData, loginSuccessSchema)).to.be.true;\r",
									"    } else {\r",
									"        pm.expect(tv4.validate(jsonData, loginErrorSchema)).to.be.true;\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newPassword123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "LoginSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newPassword123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/login",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"token\": \"token\",\r\n    \"user\": {\r\n        \"account_id\": \"account_id\",\r\n        \"email\": \"email\"\r\n    },\r\n    \"message\": \"Login successful.\"\r\n}"
						},
						{
							"name": "LoginAccountBlocked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newPassword123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/login",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"User is blocked\"\r\n}"
						},
						{
							"name": "LoginIncorrectPassword",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newPassword1\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/login",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Incorrect password.\"\r\n}"
						},
						{
							"name": "LoginUserNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test342@example.com\",\r\n  \"password\": \"newPassword123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/login",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"login"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"User not found.\"\r\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout API - Response status is correct\", function () {\r",
									"    pm.expect([200, 400, 404]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"pm.test(\"Logout API - Validate Response Structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Define expected schema for successful logout\r",
									"    var logoutSuccessSchema = {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"message\": { \"type\": \"string\" }\r",
									"        },\r",
									"        \"required\": [\"message\"]\r",
									"    };\r",
									"\r",
									"    // Define schema for logout failure (invalid token, missing token)\r",
									"    var logoutErrorSchema = {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"error\": { \"type\": \"string\" }\r",
									"        },\r",
									"        \"required\": [\"error\"]\r",
									"    };\r",
									"\r",
									"    // Validate response format based on status\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(tv4.validate(jsonData, logoutSuccessSchema)).to.be.true;\r",
									"    } else {\r",
									"        pm.expect(tv4.validate(jsonData, logoutErrorSchema)).to.be.true;\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "c1e2fd560b40ab97d4ac4636f7b8888f1b8f7fa0e74db0387bd27d1f4d13a435240705a0a32c9675",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/logout",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "LogoutNoTokenProvided",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/logout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"logout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No token provided.\"\r\n}"
						},
						{
							"name": "LogoutSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/logout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Logged out successfully.\"\r\n}"
						},
						{
							"name": "LogoutTokenNotFoundOrInvalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/logout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"logout"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Token not found or invalid.\"\r\n}"
						},
						{
							"name": "LogoutFailedToLogOut",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/logout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to log out.\"\r\n}"
						}
					]
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Register API - Response status is correct\", function () {\r",
									"    pm.expect([201, 400, 422, 500]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"// Check Content-Type header\r",
									"var contentType = pm.response.headers.get(\"Content-Type\");\r",
									"\r",
									"if (contentType.includes(\"application/json\")) {\r",
									"    // JSON Response Handling\r",
									"    pm.test(\"Register API - Validate JSON Response Structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        \r",
									"        // Define expected schema for successful registration\r",
									"        var registerSuccessSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"message\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"message\"]\r",
									"        };\r",
									"\r",
									"        // Define schema for registration failure (email exists, validation error)\r",
									"        var registerErrorSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"error\": { \"type\": \"string\" },\r",
									"                \"errors\": { \"type\": \"object\" }\r",
									"            },\r",
									"            \"required\": [\"error\"]\r",
									"        };\r",
									"\r",
									"        // Validate response format based on status\r",
									"        if (pm.response.code === 201) {\r",
									"            pm.expect(tv4.validate(jsonData, registerSuccessSchema)).to.be.true;\r",
									"        } else {\r",
									"            pm.expect(tv4.validate(jsonData, registerErrorSchema)).to.be.true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"} else if (contentType.includes(\"application/xml\") || contentType.includes(\"text/xml\")) {\r",
									"    // XML Response Handling\r",
									"    pm.test(\"Register API - Validate XML Response Structure\", function () {\r",
									"        var xmlResponse = pm.response.text(); // Get XML as text\r",
									"        \r",
									"        // Allow either <message> or <error> tag in the response\r",
									"        var containsMessage = xmlResponse.includes(\"<message>\");\r",
									"        var containsError = xmlResponse.includes(\"<error>\");\r",
									"\r",
									"        pm.expect(containsMessage || containsError).to.be.true;\r",
									"        \r",
									"        console.warn(\"Received XML Response:\", xmlResponse);\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    // ❌ Unexpected Response Handling\r",
									"    pm.test(\"Register API - Unexpected Response Format\", function () {\r",
									"        console.warn(\"Unexpected response format:\", pm.response.text());\r",
									"        pm.expect(false).to.be.true; // Force test to fail\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"anotheruser@example.com\",\r\n  \"password\": \"newPassword123\",\r\n  \"password_confirmation\": \"newPassword123\",\r\n  \"billed_from\": \"2023-01-15\",\r\n  \"subscription_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "RegisterSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newPassword123\",\r\n  \"password_confirmation\": \"newPassword123\",\r\n  \"billed_from\": \"2023-01-15\",\r\n  \"subscription_id\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/register",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"User registered successfully.\" \r\n}"
						},
						{
							"name": "RegisterEmailAlreadyExists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newPassword123\",\r\n  \"password_confirmation\": \"newPassword123\",\r\n  \"billed_from\": \"2023-01-15\",\r\n  \"subscription_id\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/register",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Email already exists.\"\r\n}"
						}
					]
				},
				{
					"name": "ResetPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Reset Password API - Response status is correct\", function () {\r",
									"    pm.expect([200, 404, 422, 500]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"// Check Content-Type header\r",
									"var contentType = pm.response.headers.get(\"Content-Type\");\r",
									"\r",
									"if (contentType.includes(\"application/json\")) {\r",
									"    //  JSON Response Handling\r",
									"    pm.test(\"Reset Password API - Validate JSON Response Structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        \r",
									"        // Define expected schema for successful password reset\r",
									"        var resetSuccessSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"message\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"message\"]\r",
									"        };\r",
									"\r",
									"        // Define schema for reset failure (email not found, validation error)\r",
									"        var resetErrorSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"error\": { \"type\": \"string\" },\r",
									"                \"errors\": { \"type\": \"object\" }\r",
									"            },\r",
									"            \"required\": [\"error\"]\r",
									"        };\r",
									"\r",
									"        // Validate response format based on status\r",
									"        if (pm.response.code === 200) {\r",
									"            pm.expect(tv4.validate(jsonData, resetSuccessSchema)).to.be.true;\r",
									"        } else {\r",
									"            pm.expect(tv4.validate(jsonData, resetErrorSchema)).to.be.true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"} else if (contentType.includes(\"application/xml\") || contentType.includes(\"text/xml\")) {\r",
									"    //  XML Response Handling\r",
									"    pm.test(\"Reset Password API - Validate XML Response Structure\", function () {\r",
									"        var xmlResponse = pm.response.text(); // Get XML as text\r",
									"        \r",
									"        // Simple check: Ensure XML contains expected success or error message\r",
									"        pm.expect(xmlResponse).to.include(\"<message>\").or.to.include(\"<error>\");\r",
									"\r",
									"        console.warn(\"Received XML Response:\", xmlResponse);\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    // ❌ Unexpected Response Handling\r",
									"    pm.test(\"Reset Password API - Unexpected Response Format\", function () {\r",
									"        console.warn(\"Unexpected response format:\", pm.response.text());\r",
									"        pm.expect(false).to.be.true; // Force test to fail\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"anotheruser@example.com\",\r\n  \"password\": \"UpdatedSecurePass123\",\r\n  \"password_confirmation\": \"UpdatedSecurePass123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/reset-password",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"reset-password"
							]
						}
					},
					"response": [
						{
							"name": "ResetPasswordSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newSecurePassword123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/reset-password",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Password updated successfully.\"\r\n}"
						},
						{
							"name": "ResetPasswordUserNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"newSecurePassword123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/reset-password",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"reset-password"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"User not found.\"\r\n}"
						}
					]
				},
				{
					"name": "BlockAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Block Account API - Response status is correct\", function () {\r",
									"    pm.expect([200, 400, 404, 500]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"// Check Content-Type header\r",
									"var contentType = pm.response.headers.get(\"Content-Type\");\r",
									"\r",
									"if (contentType.includes(\"application/json\")) {\r",
									"    // JSON Response Handling\r",
									"    pm.test(\"Block Account API - Validate JSON Response Structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        \r",
									"        // Define expected schema for successful block\r",
									"        var blockSuccessSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"message\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"message\"]\r",
									"        };\r",
									"\r",
									"        // Define schema for block failure (user not found, other errors)\r",
									"        var blockErrorSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"error\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"error\"]\r",
									"        };\r",
									"\r",
									"        // Validate response format based on status\r",
									"        if (pm.response.code === 200) {\r",
									"            pm.expect(tv4.validate(jsonData, blockSuccessSchema)).to.be.true;\r",
									"        } else {\r",
									"            pm.expect(tv4.validate(jsonData, blockErrorSchema)).to.be.true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"} else if (contentType.includes(\"application/xml\") || contentType.includes(\"text/xml\")) {\r",
									"    //  XML Response Handling\r",
									"    pm.test(\"Block Account API - Validate XML Response Structure\", function () {\r",
									"        var xmlResponse = pm.response.text(); // Get XML as text\r",
									"        \r",
									"        // Simple check: Ensure XML contains expected success or error message\r",
									"        pm.expect(xmlResponse).to.include(\"<message>\").or.to.include(\"<error>\");\r",
									"\r",
									"        console.warn(\"Received XML Response:\", xmlResponse);\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    // ❌ Unexpected Response Handling\r",
									"    pm.test(\"Block Account API - Unexpected Response Format\", function () {\r",
									"        console.warn(\"Unexpected response format:\", pm.response.text());\r",
									"        pm.expect(false).to.be.true; // Force test to fail\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"anotheruser@example.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/block",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"block"
							]
						}
					},
					"response": [
						{
							"name": "BlockAccountSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"test@example.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/block",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"block"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"User successfully blocked.\"\r\n}"
						},
						{
							"name": "BlockAccountuserNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"test@exam57347634ple.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/block",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"block"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"User not found.\"\r\n}"
						},
						{
							"name": "BlockAccountAlreadyBlocked",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"test@example.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/block",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"block"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"User already blocked.\"\r\n}"
						}
					]
				},
				{
					"name": "AddProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add Profile API - Response status is correct\", function () {\r",
									"    pm.expect([201, 400, 404, 500]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"// Check Content-Type header\r",
									"var contentType = pm.response.headers.get(\"Content-Type\");\r",
									"\r",
									"if (contentType.includes(\"application/json\")) {\r",
									"    //  JSON Response Handling\r",
									"    pm.test(\"Add Profile API - Validate JSON Response Structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        \r",
									"        // Define expected schema for successful profile addition\r",
									"        var addProfileSuccessSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"message\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"message\"]\r",
									"        };\r",
									"\r",
									"        // Define schema for profile addition failure (account not found, other errors)\r",
									"        var addProfileErrorSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"error\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"error\"]\r",
									"        };\r",
									"\r",
									"        // Validate response format based on status\r",
									"        if (pm.response.code === 201) {\r",
									"            pm.expect(tv4.validate(jsonData, addProfileSuccessSchema)).to.be.true;\r",
									"        } else {\r",
									"            pm.expect(tv4.validate(jsonData, addProfileErrorSchema)).to.be.true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"} else if (contentType.includes(\"application/xml\") || contentType.includes(\"text/xml\")) {\r",
									"    //  XML Response Handling\r",
									"    pm.test(\"Add Profile API - Validate XML Response Structure\", function () {\r",
									"        var xmlResponse = pm.response.text(); // Get XML as text\r",
									"        \r",
									"        // Simple check: Ensure XML contains expected success or error message\r",
									"        pm.expect(xmlResponse).to.include(\"<message>\").or.to.include(\"<error>\");\r",
									"\r",
									"        console.warn(\"Received XML Response:\", xmlResponse);\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    // ❌ Unexpected Response Handling\r",
									"    pm.test(\"Add Profile API - Unexpected Response Format\", function () {\r",
									"        console.warn(\"Unexpected response format:\", pm.response.text());\r",
									"        pm.expect(false).to.be.true; // Force test to fail\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"account_id\": 4,\r\n    \"profile_name\": \"my profile\",\r\n    \"profile_image\": \"placeholder\",\r\n    \"profile_age\": 20,\r\n    \"profile_lang\": 1,\r\n    \"profile_movies_preferred\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								""
							]
						}
					},
					"response": [
						{
							"name": "AddProfileAccountNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 578687,\r\n    \"profile_name\": \"my profile\",\r\n    \"profile_image\": \"placeholder\",\r\n    \"profile_age\": 20,\r\n    \"profile_lang\": 1,\r\n    \"profile_movies_preferred\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Account not found.\"\r\n}"
						},
						{
							"name": "AddProfileTooManyProfiles",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 1,\r\n    \"profile_name\": \"my profile\",\r\n    \"profile_image\": \"placeholder\",\r\n    \"profile_age\": 20,\r\n    \"profile_lang\": 1,\r\n    \"profile_movies_preferred\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Can not add profile, too many profiles present already.\"\r\n}"
						},
						{
							"name": "AddProfileSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 1,\r\n    \"profile_name\": \"my profile\",\r\n    \"profile_image\": \"placeholder\",\r\n    \"profile_age\": 20,\r\n    \"profile_lang\": 1,\r\n    \"profile_movies_preferred\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Profile added successfully.\"\r\n}"
						}
					]
				},
				{
					"name": "RemoveProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove Profile API - Response status is correct\", function () {\r",
									"    pm.expect([200, 404, 400, 500]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"// Check Content-Type header\r",
									"var contentType = pm.response.headers.get(\"Content-Type\");\r",
									"\r",
									"if (contentType.includes(\"application/json\")) {\r",
									"    //  JSON Response Handling\r",
									"    pm.test(\"Remove Profile API - Validate JSON Response Structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        \r",
									"        // Define expected schema for successful profile removal\r",
									"        var removeProfileSuccessSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"message\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"message\"]\r",
									"        };\r",
									"\r",
									"        // Define schema for profile removal failure (profile not found, other errors)\r",
									"        var removeProfileErrorSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"error\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"error\"]\r",
									"        };\r",
									"\r",
									"        // Validate response format based on status\r",
									"        if (pm.response.code === 200) {\r",
									"            pm.expect(tv4.validate(jsonData, removeProfileSuccessSchema)).to.be.true;\r",
									"        } else {\r",
									"            pm.expect(tv4.validate(jsonData, removeProfileErrorSchema)).to.be.true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"} else if (contentType.includes(\"application/xml\") || contentType.includes(\"text/xml\")) {\r",
									"    // XML Response Handling\r",
									"    pm.test(\"Remove Profile API - Validate XML Response Structure\", function () {\r",
									"        var xmlResponse = pm.response.text(); // Get XML as text\r",
									"        \r",
									"        // Simple check: Ensure XML contains expected success or error message\r",
									"        pm.expect(xmlResponse).to.include(\"<message>\").or.to.include(\"<error>\");\r",
									"\r",
									"        console.warn(\"Received XML Response:\", xmlResponse);\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    // ❌ Unexpected Response Handling\r",
									"    pm.test(\"Remove Profile API - Unexpected Response Format\", function () {\r",
									"        console.warn(\"Unexpected response format:\", pm.response.text());\r",
									"        pm.expect(false).to.be.true; // Force test to fail\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/5",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"5"
							]
						}
					},
					"response": [
						{
							"name": "RemoveProfileNotFound",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/56347543",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"56347543"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						},
						{
							"name": "RemoveProfileSuccess",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/5",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Profile removed successfully.\"\r\n}"
						}
					]
				},
				{
					"name": "DeleteAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Account API - Response status is correct\", function () {\r",
									"    pm.expect([200, 404, 400, 500]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"// Check Content-Type header\r",
									"var contentType = pm.response.headers.get(\"Content-Type\");\r",
									"\r",
									"if (contentType.includes(\"application/json\")) {\r",
									"    // JSON Response Handling\r",
									"    pm.test(\"Delete Account API - Validate JSON Response Structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        \r",
									"        // Define expected schema for successful account deletion\r",
									"        var deleteAccountSuccessSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"message\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"message\"]\r",
									"        };\r",
									"\r",
									"        // Define schema for account deletion failure (account not found, other errors)\r",
									"        var deleteAccountErrorSchema = {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"error\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [\"error\"]\r",
									"        };\r",
									"\r",
									"        // Validate response format based on status\r",
									"        if (pm.response.code === 200) {\r",
									"            pm.expect(tv4.validate(jsonData, deleteAccountSuccessSchema)).to.be.true;\r",
									"        } else {\r",
									"            pm.expect(tv4.validate(jsonData, deleteAccountErrorSchema)).to.be.true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"} else if (contentType.includes(\"application/xml\") || contentType.includes(\"text/xml\")) {\r",
									"    //  XML Response Handling\r",
									"    pm.test(\"Delete Account API - Validate XML Response Structure\", function () {\r",
									"        var xmlResponse = pm.response.text(); // Get XML as text\r",
									"        \r",
									"        // Simple check: Ensure XML contains expected success or error message\r",
									"        pm.expect(xmlResponse).to.include(\"<message>\").or.to.include(\"<error>\");\r",
									"\r",
									"        console.warn(\"Received XML Response:\", xmlResponse);\r",
									"    });\r",
									"\r",
									"} else {\r",
									"    // ❌ Unexpected Response Handling\r",
									"    pm.test(\"Delete Account API - Unexpected Response Format\", function () {\r",
									"        console.warn(\"Unexpected response format:\", pm.response.text());\r",
									"        pm.expect(false).to.be.true; // Force test to fail\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/account/delete/29",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"account",
								"delete",
								"29"
							]
						}
					},
					"response": [
						{
							"name": "DeleteAccountSuccess",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/delete/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"delete",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Account removed successfully.\"\r\n}"
						},
						{
							"name": "DeleteAccountNotFound",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/account/delete/57437",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"account",
										"delete",
										"57437"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Account not found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "MediaController",
			"item": [
				{
					"name": "Play",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//  Ensure response status is 200 (Success) or 404 (Not Found)\r",
									"pm.test(\"Status is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"// Validate response structure (must contain 'message' or 'error')\r",
									"pm.test(\"Response contains expected fields\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"    pm.expect(jsonData).to.have.property(\"media_id\");\r",
									"});\r",
									"\r",
									"// Ensure 'media_id' is a number or null\r",
									"pm.test(\"media_id should be a number or null\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.media_id).to.satisfy((val) => typeof val === \"number\" || val === null);\r",
									"});\r",
									"\r",
									"//  Validate success message when media plays\r",
									"pm.test(\"Validate play media success message\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(jsonData.message).to.eql(\"Media is playing.\");\r",
									"    }\r",
									"});\r",
									"\r",
									"//  Validate error messages for 404 responses\r",
									"pm.test(\"Validate error messages\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (pm.response.code === 404) {\r",
									"        pm.expect(jsonData.error).to.match(/Profile not found|Media not found/);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"profile_id\": 6\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/media/11/play",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"media",
								"11",
								"play"
							]
						}
					},
					"response": [
						{
							"name": "PlaySuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/play",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"play"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Media is playing.\",\r\n    \"media_id\": \"1\"\r\n}"
						},
						{
							"name": "PlayMediaNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/54737/play",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"54737",
										"play"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Media not found.\",\r\n    \"media_id\": null\r\n}"
						},
						{
							"name": "PlayProfileNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/play",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"play"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\",\r\n    \"media_id\": null\r\n}"
						}
					]
				},
				{
					"name": "Pause",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//  Ensure response status is 200, 404, or 500\r",
									"pm.test(\"Status is 200, 404, or 500\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404, 500]);\r",
									"});\r",
									"\r",
									"//  Validate response contains expected fields\r",
									"pm.test(\"Response contains expected fields\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    \r",
									"    // Check if either \"message\" or \"error\" exists\r",
									"    pm.expect(jsonData).to.have.any.keys(\"message\", \"error\");\r",
									"\r",
									"    // If success, \"pause_spot\" must be present\r",
									"    if (jsonData.message === \"Media paused.\") {\r",
									"        pm.expect(jsonData).to.have.property(\"pause_spot\");\r",
									"    }\r",
									"});\r",
									"\r",
									"//  Ensure 'pause_spot' is a number when media is paused\r",
									"pm.test(\"pause_spot should be a number when media is paused\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    \r",
									"    if (jsonData.message === \"Media paused.\") {\r",
									"        let pauseSpot = Number(jsonData.pause_spot); // Convert to number\r",
									"        pm.expect(pauseSpot).to.be.a(\"number\");\r",
									"    }\r",
									"});\r",
									"\r",
									"//  Validate success message when media is paused\r",
									"pm.test(\"Validate pause media success message\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(jsonData.message).to.eql(\"Media paused.\");\r",
									"    }\r",
									"});\r",
									"\r",
									"//  Validate error messages for 404 and 500 responses\r",
									"pm.test(\"Validate error messages\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (pm.response.code === 404 || pm.response.code === 500) {\r",
									"        pm.expect(jsonData.error).to.match(/Media not found|Failed to update pause spot/);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"profile_id\": 6,\r\n    \"pause_spot\": \"1000\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/media/11/pause",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"media",
								"11",
								"pause"
							]
						}
					},
					"response": [
						{
							"name": "PauseSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile_id\": 4,\r\n    \"pause_spot\": 1000\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/pause",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"pause"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Media paused.\",\r\n    \"pause_spot\": 1000\r\n}"
						},
						{
							"name": "PauseProfileNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile_id\": 54734,\r\n    \"pause_spot\": \"1000\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/pause",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"pause"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						},
						{
							"name": "PauseMediaNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile_id\": 4,\r\n    \"pause_spot\": \"1000\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/675347/pause",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"675347",
										"pause"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Media not found.\"\r\n}"
						},
						{
							"name": "PauseFailed",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile_id\": 4,\r\n    \"pause_spot\": \"1000\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/pause",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"pause"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update pause spot.\"\r\n}"
						}
					]
				},
				{
					"name": "Resume",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//  Ensure response status is 200 or 404\r",
									"pm.test(\"Status is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"//  Validate response contains expected fields\r",
									"pm.test(\"Response contains expected fields\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    \r",
									"    // Check if either \"message\" or \"error\" exists\r",
									"    pm.expect(jsonData).to.have.any.keys(\"message\", \"error\");\r",
									"\r",
									"    // If success, \"resume_at\" must be present\r",
									"    if (jsonData.message === \"Media resumed.\") {\r",
									"        pm.expect(jsonData).to.have.property(\"resume_at\");\r",
									"    }\r",
									"});\r",
									"\r",
									"//  Ensure 'resume_at' is a number when media is resumed\r",
									"pm.test(\"resume_at should be a number when media is resumed\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    \r",
									"    if (jsonData.message === \"Media resumed.\") {\r",
									"        let resumeAt = Number(jsonData.resume_at); // Convert to number\r",
									"        pm.expect(resumeAt).to.be.a(\"number\");\r",
									"    }\r",
									"});\r",
									"\r",
									"//  Validate success message when media is resumed\r",
									"pm.test(\"Validate resume media success message\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(jsonData.message).to.eql(\"Media resumed.\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"profile_id\": 6\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/media/11/resume",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"media",
								"11",
								"resume"
							]
						}
					},
					"response": [
						{
							"name": "ResumeSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/resume",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"resume"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Media resumed.\",\r\n    \"resume_at\": \"00:45:39\"\r\n}"
						},
						{
							"name": "ResumeMediaNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/543743278/resume",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"543743278",
										"resume"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Media not found.\"\r\n}"
						},
						{
							"name": "ResumeProfileNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/1/resume",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"1",
										"resume"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						},
						{
							"name": "ResumeNoWatchDataFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/media/{$id}/resume",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"media",
										"{$id}",
										"resume"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No watch data was found for this media.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "ProfileController",
			"item": [
				{
					"name": "updatePreferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 400, 404, 500]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain a message or error\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.any.keys(\"message\", \"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"movies_preferred\": 2\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/profile/6/preferences",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"profile",
								"6",
								"preferences"
							]
						}
					},
					"response": [
						{
							"name": "updatePreferencesSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"movies_preferred\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/preferences",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Preferences updated successfully.\"\r\n}"
						},
						{
							"name": "updatePreferencesFailure",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"movies_preferred\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/preferences",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"preferences"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update preferences.\"\r\n}"
						},
						{
							"name": "updatePreferencesNoChangesMade",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"movies_preferred\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/preferences",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"preferences"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update preferences due to no changes being made.\"\r\n}"
						},
						{
							"name": "updatePreferencesNoProfileFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"movies_preferred\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/674387/preferences",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"674387",
										"preferences"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						}
					]
				},
				{
					"name": "GetToWatchList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404, 500]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain 'values' or 'error'\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.any.keys(\"values\", \"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/profile/6/toWatch",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"profile",
								"6",
								"toWatch"
							]
						}
					},
					"response": [
						{
							"name": "GetToWatchListProfileNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/toWatch",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"toWatch"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						},
						{
							"name": "GetToWatchListNoWatchListFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/toWatch",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"toWatch"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile has no watch list.\"\r\n}"
						},
						{
							"name": "GetToWatchListSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/toWatch",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"toWatch"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"media_id\": 1,\r\n            \"series_id\": 1,\r\n            \"profile_id\": 5\r\n        },\r\n        {\r\n            \"media_id\": 1,\r\n            \"series_id\": null,\r\n            \"profile_id\": 5\r\n        }\r\n    ]\r\n}"
						}
					]
				},
				{
					"name": "updateWatchList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, 201, or 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 404, 500]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain a message or error\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.any.keys(\"message\", \"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 2,\r\n    \"series_id\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/profile/6/updateWatchList",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"profile",
								"6",
								"updateWatchList"
							]
						}
					},
					"response": [
						{
							"name": "updateWatchListAddMediaSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 2,\r\n    \"series_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateWatchList"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n   \"message\": \"Media added to watch list successfully.\" \r\n}"
						},
						{
							"name": "updateWatchListSeriesNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 2,\r\n    \"series_id\": 543784\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateWatchList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Series not found.\"\r\n}"
						},
						{
							"name": "updateWatchListProfileNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 2,\r\n    \"series_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/6556546/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"6556546",
										"updateWatchList"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						},
						{
							"name": "updateWatchListMediaNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 7645834,\r\n    \"series_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateWatchList"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Media not found.\"\r\n}"
						},
						{
							"name": "updateWatchListInvalidAction",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"edit\",\r\n    \"media_id\": 2,\r\n    \"series_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateWatchList"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Invalid action.\"\r\n}"
						},
						{
							"name": "updateWatchListRemoveMediaSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 2,\r\n    \"series_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateWatchList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Media removed from watch list successfully.\"\r\n}"
						},
						{
							"name": "updateWatchListErrorOccurred",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"add\",\r\n    \"media_id\": 2,\r\n    \"series_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateWatchList",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateWatchList"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"An error occured while updating the watch list.\"\r\n}"
						}
					]
				},
				{
					"name": "updateViewingClassifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, 201, or 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 404, 500]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"add\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/profile/{$id}/updateViewClassifications",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"profile",
								"{$id}",
								"updateViewClassifications"
							]
						}
					},
					"response": [
						{
							"name": "updateViewingClassificationsAddClassificationSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"add\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateViewClassifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Viewing classification added successfully.\"\r\n}"
						},
						{
							"name": "updateViewingClassificationsAddClassificationFail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"add\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateViewClassifications"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Failed to add viewing classification.\"\r\n}"
						},
						{
							"name": "updateViewingClassificationsRemoveClassificationSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"remove\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateViewClassifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Viewing classification removed successfully.\"\r\n}"
						},
						{
							"name": "updateViewingClassificationsRemoveClassificationFailure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"remove\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateViewClassifications"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to remove viewing classification.\"\r\n}"
						},
						{
							"name": "updateViewingClassificationsInvalidAction",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"edit\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateViewClassifications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Invalid action.\"\r\n}"
						},
						{
							"name": "updateViewingClassificationsProfileNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 1,\r\n    \"action\": \"add\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/58743673/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"58743673",
										"updateViewClassifications"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Profile not found.\"\r\n}"
						},
						{
							"name": "updateViewingClassificationsClassificationNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification_id\" : 47657832,\r\n    \"action\": \"add\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/profile/5/updateViewClassifications",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"profile",
										"5",
										"updateViewClassifications"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Classification not found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "TokenController",
			"item": [
				{
					"name": "Generate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain a token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"token\");\r",
									"    pm.environment.set(\"generated_token\", jsonData.token); // Save token for next requests\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/token/generate/5",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"token",
								"generate",
								"5"
							]
						}
					},
					"response": [
						{
							"name": "GenerateSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/generate/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"generate",
										"1"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Token inserted successfully.\",\r\n    \"token\": \"83278473267432473274fhdu32\"\r\n}"
						},
						{
							"name": "GenerateFailure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/generate/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"generate",
										"1"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Something went wrong.\"\r\n}"
						},
						{
							"name": "GenerateAccountNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/generate/884734321",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"generate",
										"884734321"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"User not found.\"\r\n}"
						}
					]
				},
				{
					"name": "Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains a new token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"token\");\r",
									"    pm.environment.set(\"refreshed_token\", jsonData.token); \r",
									"    // Save new token for validation\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "1beb6d4ecc1528efada38d2bf48f85dbd755bb53cdf91bfa7c4a6c839f617497372cb911b8c9bdbc",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/token/refresh",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"token",
								"refresh"
							]
						}
					},
					"response": [
						{
							"name": "RefreshSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/refresh",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"token\": \"53784734763476sfdhjfds\"\r\n}"
						},
						{
							"name": "RefreshNoTokenProvided",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/refresh",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"refresh"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No token provided.\"\r\n}"
						},
						{
							"name": "RefreshInvalidToken",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/refresh",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"refresh"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Invalid token.\"\r\n}"
						},
						{
							"name": "RefreshSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/refresh",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"refresh"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Token inserted successfully.\",\r\n    \"token\": \"jgdfhyuewyu34423uhfsdh\"\r\n}"
						},
						{
							"name": "RefreshFailure",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/refresh",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"refresh"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Something went wrong.\"\r\n}"
						}
					]
				},
				{
					"name": "Validate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains a valid token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Token is valid.\");\r",
									"    pm.expect(jsonData).to.have.property(\"token\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "135030d64de33b7f8dbf59aea5ab6032ddbd342c635cc8f7800b0be7ac918846f781b792ff484671",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/token/validate",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"token",
								"validate"
							]
						}
					},
					"response": [
						{
							"name": "ValidateTokenNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/validate",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"validate"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Token not found.\"\r\n}"
						},
						{
							"name": "ValidateSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/validate",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Token is valid.\",\r\n    \"token\": \"fjdshjfsjdfj4378267423bh\"\r\n}"
						},
						{
							"name": "ValidateTokenNotProvided",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/validate",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"validate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No token provided.\"\r\n}"
						}
					]
				},
				{
					"name": "Revoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(jsonData.message).to.equal(\"Token deleted successfully.\");\r",
									"    } else if (pm.response.code === 404) {\r",
									"        pm.expect(jsonData.error).to.equal(\"Token not found.\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "135030d64de33b7f8dbf59aea5ab6032ddbd342c635cc8f7800b0be7ac918846f781b792ff484671",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/token/revoke",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"token",
								"revoke"
							]
						}
					},
					"response": [
						{
							"name": "RevokeSuccess",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/revoke",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"revoke"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Token deleted successfully.\"\r\n}"
						},
						{
							"name": "RevokeNoTokenProvided",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/revoke",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"revoke"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No token provided.\"\r\n}"
						},
						{
							"name": "RevokeNoTokenFound",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/revoke",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										"revoke"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Token not found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "SubcriptionController",
			"item": [
				{
					"name": "Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain subscription details\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"values\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/subscription/details/3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"subscription",
								"details",
								"3"
							]
						}
					},
					"response": [
						{
							"name": "DetailsSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/subscription/details/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"subscription",
										"details",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"account_id\" : 1,\r\n            \"subscription_name\" : \"basic\",\r\n            \"subscription_price\" : 7.99,\r\n            \"billed_from\": \"2020-07-08\",\r\n            \"discount_active\" : \"1\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "DetailsNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/subscription/details/5473",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"subscription",
										"details",
										"5473"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Subscription details not found.\"\r\n}"
						}
					]
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should confirm update\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.equal(\"Subscription updated successfully.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"account_id\": 3,\r\n    \"subscription_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/subscription/update",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"subscription",
								"update"
							]
						}
					},
					"response": [
						{
							"name": "UpdateSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 1,\r\n    \"subscription_id\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/subscription/update",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"subscription",
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n   \"message\": \"Subscription updated successfully.\"\r\n}"
						},
						{
							"name": "UpdateNoChangesMade",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 1,\r\n    \"subscription_id\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/subscription/update",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"subscription",
										"update"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update subscription. No changes made.\"\r\n}"
						},
						{
							"name": "UpdateAccountNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 7584,\r\n    \"subscription_id\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/subscription/update",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"subscription",
										"update"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Account not found.\"\r\n}"
						},
						{
							"name": "UpdateSubscriptionNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": 1,\r\n    \"subscription_id\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/subscription/update",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"subscription",
										"update"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Subscription not found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "SeriesController",
			"item": [
				{
					"name": "listAllSeries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'values'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"values\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/series/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"series",
								""
							]
						}
					},
					"response": [
						{
							"name": "listAllSeriesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [ \r\n        {\r\n            \"series_id\": \"1\",\r\n            \"title\": \"seriesTitle\",\r\n            \"number_of_seasons\": 5\r\n        },\r\n        {\r\n            \"series_id\": \"2\",\r\n            \"title\": \"differentTitle\",\r\n            \"number_of_seasons\": 8\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "listAllSeriesNoSeriesFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No series found.\"\r\n}"
						}
					]
				},
				{
					"name": "getSeriesById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"pm.test(\"If series exists, it should contain series_id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(jsonData.values[0]).to.have.property(\"series_id\");\r",
									"    } else {\r",
									"        pm.expect(jsonData).to.have.property(\"error\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/series/3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"series",
								"3"
							]
						}
					},
					"response": [
						{
							"name": "getSeriesByIdSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n        \"values\": [ \r\n        {\r\n            \"series_id\": \"1\",\r\n            \"title\": \"seriesTitle\",\r\n            \"number_of_seasons\": 5\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getSeriesByIdNoSeriesFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/2",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Series not found.\"\r\n}"
						}
					]
				},
				{
					"name": "createNewSeries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.equal(\"Series inserted successfully.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Squidgame2\",\r\n    \"genre_id\": \"2\",\r\n    \"number_of_seasons\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/series/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"series",
								""
							]
						}
					},
					"response": [
						{
							"name": "createNewSeriesSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Squidgame\",\r\n    \"genre_id\": \"1\",\r\n    \"number_of_seasons\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Series inserted successfully.\"\r\n}"
						},
						{
							"name": "createNewSeriesNoGenreFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Squidgame\",\r\n    \"genre_id\": \"1\",\r\n    \"number_of_seasons\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Genre not found.\"\r\n}"
						},
						{
							"name": "createNewSeriesFailure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Squidgame\",\r\n    \"genre_id\": \"1\",\r\n    \"number_of_seasons\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to insert series.\"\r\n}"
						}
					]
				},
				{
					"name": "updateSeries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check success or failure message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(jsonData.message).to.equal(\"Series updated successfully.\");\r",
									"    } else {\r",
									"        pm.expect(jsonData.error).to.equal(\"Series not found.\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"updatedSeriesName\",\r\n    \"genre_id\": 1,\r\n    \"number_of_seasons\": 23\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/series/4",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"series",
								"4"
							]
						}
					},
					"response": [
						{
							"name": "updateSeriesSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedSeriesName\",\r\n    \"genre_id\": 1,\r\n    \"number_of_seasons\": 23\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Series updated successfully.\"\r\n}"
						},
						{
							"name": "updateSeriesNoSeriesFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedSeriesName\",\r\n    \"genre_id\": 1,\r\n    \"number_of_seasons\": 23\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/54375",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"54375"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Series not found.\"\r\n}"
						},
						{
							"name": "updateSeriesNoChangesMade",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedSeriesName\",\r\n    \"genre_id\": 1,\r\n    \"number_of_seasons\": 23\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"1"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update series. No changes made.\"\r\n}"
						},
						{
							"name": "updateSeriesGenreNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedSeriesName\",\r\n    \"genre_id\": 78547834,\r\n    \"number_of_seasons\": 23\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Genre not found.\"\r\n}"
						}
					]
				},
				{
					"name": "deleteSeries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check deletion message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.be.oneOf([\"Series deleted successfully.\", \"Series not found.\"]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/series/2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"series",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "deleteSeriesSuccess",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Series deleted successfully.\"\r\n}"
						},
						{
							"name": "deleteSeriesNoSeriesFound",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/series/657342",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"series",
										"657342"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Series not found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "AnalyticsController",
			"item": [
				{
					"name": "getTopTen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test for status code 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Test to check if the response contains the expected structure\r",
									"pm.test(\"Response has values\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"values\");\r",
									"    pm.expect(jsonData.values).to.be.an(\"array\");\r",
									"    pm.expect(jsonData.values.length).to.be.greaterThan(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/analytics/top-ten/longest/movies",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"analytics",
								"top-ten",
								"longest",
								"movies"
							]
						}
					},
					"response": [
						{
							"name": "getTopTenWatchedMoviesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/watched/movies",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"watched",
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MovieTitle\": \"title\",\r\n            \"TimesWatched\": 43\r\n        },\r\n        {\r\n            \"MovieTitle\": \"title543\",\r\n            \"TimesWatched\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenWatchedSeriesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/watched/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"watched",
										"series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"SeriesTitle\": \"title\",\r\n            \"TimesWatched\": 43\r\n        },\r\n        {\r\n            \"MovieTitle\": \"title543\",\r\n            \"TimesWatched\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenWatchedMediaSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/watched/medias",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"watched",
										"medias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MediaTitle\": \"title\",\r\n            \"TimesWatched\": 43\r\n        },\r\n        {\r\n            \"MediaTitle\": \"title543\",\r\n            \"TimesWatched\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenWatchedGenresSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/watched/genres",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"watched",
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"GenreName\": \"title\",\r\n            \"TotalViews\": 43\r\n        },\r\n        {\r\n            \"GenreName\": \"title543\",\r\n            \"TotalViews\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenLongestSeriesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/longest/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"longest",
										"series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"SeriesTitle\": \"title\",\r\n            \"EpisodeCount\": 43\r\n        },\r\n        {\r\n            \"SeriesTitle\": \"title543\",\r\n            \"EpisodeCount\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenLongestMoviesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/longest/movies",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"longest",
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MovieTitle\": \"title\",\r\n            \"MovieDuration\": 43\r\n        },\r\n        {\r\n            \"MovieTitle\": \"title543\",\r\n            \"MovieDuration\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenShortestMoviesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/shortest/movies",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"shortest",
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MovieTitle\": \"title\",\r\n            \"MovieDuration\": 43\r\n        },\r\n        {\r\n            \"MovieTitle\": \"title543\",\r\n            \"MovieDuration\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenShortestSeriesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/shortest/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"shortest",
										"series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"SeriesTitle\": \"title\",\r\n            \"EpisodeCount\": 43\r\n        },\r\n        {\r\n            \"SeriesTitle\": \"title543\",\r\n            \"EpisodeCount\": 34\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTopTenInvalidCategory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/watched/shorts",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"watched",
										"shorts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No matching category.\"\r\n}"
						},
						{
							"name": "getTopTenInvalidType",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/most-played/movies",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"most-played",
										"movies"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No matching type.\"\r\n}"
						},
						{
							"name": "getTopTenNoValuesFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/top-ten/watched/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"top-ten",
										"watched",
										"series"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No values found.\"\r\n}"
						}
					]
				},
				{
					"name": "getBottomTen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.header('Content-Type', 'application/xml');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'values'\", function() {\r",
									"    pm.expect(pm.response.text()).to.include('values');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/medias",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"analytics",
								"bottom-ten-watched",
								"medias"
							]
						}
					},
					"response": [
						{
							"name": "getBottomTenGenresSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/genres",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"bottom-ten-watched",
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"GenreName\": \"name\",\r\n            \"TotalVies\": 330\r\n        },\r\n        {\r\n            \"GenreName\": \"name74\",\r\n            \"TotalVies\": 432\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getBottomTenMoviesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/movies",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"bottom-ten-watched",
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MovieTitle\": \"name\",\r\n            \"TimesWatched\": 330\r\n        },\r\n        {\r\n            \"MovieTitle\": \"name74\",\r\n            \"TimesWatched\": 432\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getBottomTenMediasSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/medias",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"bottom-ten-watched",
										"medias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MediaTitle\": \"name\",\r\n            \"TimesWatched\": 330\r\n        },\r\n        {\r\n            \"MediaTitle\": \"name74\",\r\n            \"TimesWatched\": 432\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getBottomTenSeriesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"bottom-ten-watched",
										"series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"SeriesTitle\": \"name\",\r\n            \"TimesWatched\": 330\r\n        },\r\n        {\r\n            \"SeriesTitle\": \"name74\",\r\n            \"TimesWatched\": 433\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getBottomTenInvalidCategory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/shorts",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"bottom-ten-watched",
										"shorts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No matching category.\"\r\n}"
						},
						{
							"name": "getBottomTenNoValuesFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/bottom-ten-watched/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"bottom-ten-watched",
										"series"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No values found.\"\r\n}"
						}
					]
				},
				{
					"name": "getTotalRevenue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'values'\", function() {\r",
									"    pm.response.to.have.jsonBody('values');\r",
									"});\r",
									"\r",
									"pm.test(\"Values array is not empty\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.values.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/analytics/revenue",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"analytics",
								"revenue"
							]
						}
					},
					"response": [
						{
							"name": "getTotalRevenueSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/revenue",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"revenue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"TotalRevenue\": 453.6\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getTotalRevenueNoRevenueFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/revenue",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"revenue"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No revenue found.\"\r\n}"
						}
					]
				},
				{
					"name": "getSortAllByViews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'values'\", function() {\r",
									"    pm.response.to.have.jsonBody('values');\r",
									"});\r",
									"\r",
									"pm.test(\"Values array is not empty\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.values.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/medias",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"analytics",
								"sort-all-by-views",
								"medias"
							]
						}
					},
					"response": [
						{
							"name": "getSortAllByViewsMoviesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/movies",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"sort-all-by-views",
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MovieTitle\": \"title\",\r\n            \"TimesWatched\": 43\r\n        },\r\n        {\r\n            \"MovieTitle\": \"title32\",\r\n            \"TimesWatched\": 33\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getSortAllByViewsSeriesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"sort-all-by-views",
										"series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"SeriesTitle\": \"title\",\r\n            \"TimesWatched\": 43\r\n        },\r\n        {\r\n            \"SeriesTitle\": \"title32\",\r\n            \"TimesWatched\": 33\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getSortAllByViewsMediasSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/medias",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"sort-all-by-views",
										"medias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"MediaTitle\": \"title\",\r\n            \"TimesWatched\": 43\r\n        },\r\n        {\r\n            \"MediaTitle\": \"title32\",\r\n            \"TimesWatched\": 33\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getSortAllByViewsGenresSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/genres",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"sort-all-by-views",
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"GenreName\": \"title\",\r\n            \"TotalViews\": 43\r\n        },\r\n        {\r\n            \"GenreName\": \"title32\",\r\n            \"TotalViews\": 33\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getSortAllByViewsNoMatchingCategory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/shorts",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"sort-all-by-views",
										"shorts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No matching category.\"\r\n}"
						},
						{
							"name": "getSortAllByViewsNoValuesFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/analytics/sort-all-by-views/series",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"analytics",
										"sort-all-by-views",
										"series"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No values found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "EpisodeController",
			"item": [
				{
					"name": "getAllEpisodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'values'\", function() {\r",
									"    pm.response.to.have.jsonBody('values');\r",
									"});\r",
									"\r",
									"pm.test(\"Values array is not empty\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.values.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Each episode contains necessary properties\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    jsonData.values.forEach(item => {\r",
									"        pm.expect(item).to.have.property('title');\r",
									"        pm.expect(item).to.have.property('season');\r",
									"        pm.expect(item).to.have.property('duration');\r",
									"        pm.expect(item).to.have.property('genre_id');\r",
									"        pm.expect(item).to.have.property('series_id');\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/episode/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"episode",
								""
							]
						}
					},
					"response": [
						{
							"name": "getAllEpisodesNoEpisodesFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No episodes found.\"\r\n}"
						},
						{
							"name": "getAllEpisodesSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"media_id\" : 1,\r\n            \"title\" : \"titleHere\",\r\n            \"duration\" : \"00:34:45\",\r\n            \"series_id\" : 1,\r\n            \"season\" : 3,\r\n            \"genre_id\": 1\r\n        },\r\n        {\r\n            \"media_id\" : 2,\r\n            \"title\" : \"titleHere34\",\r\n            \"duration\" : \"00:40:45\",\r\n            \"series_id\" : 3,\r\n            \"season\" : 7,\r\n            \"genre_id\": 9\r\n        }\r\n    ]\r\n}"
						}
					]
				},
				{
					"name": "getEpisodeById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be a JSON object\", function () {\r",
									"    pm.response.to.have.jsonBody();\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status 200 if episode is found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/episode/3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"episode",
								"3"
							]
						}
					},
					"response": [
						{
							"name": "getEpisodeByIdSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"media_id\" : 1,\r\n            \"title\" : \"titleHere\",\r\n            \"duration\" : \"00:34:45\",\r\n            \"series_id\" : 1,\r\n            \"season\" : 3,\r\n            \"genre_id\": 1\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getEpisodeByIdNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/573",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"573"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No episode found with that id.\"\r\n}"
						}
					]
				},
				{
					"name": "addNewEpisode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'message'\", function() {\r",
									"    pm.response.to.have.jsonBody('message');\r",
									"});\r",
									"\r",
									"pm.test(\"Message is 'Episode inserted successfully.'\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('Episode inserted successfully.');\r",
									"});\r",
									"\r",
									"pm.test(\"Failed episode creation returns 500\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(pm.response.status).to.eql(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"newEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 3,\r\n    \"series_id\": 3,\r\n    \"genre_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/episode/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"episode",
								""
							]
						}
					},
					"response": [
						{
							"name": "addNewEpisodeSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"newEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Episode inserted successfully.\"\r\n}"
						},
						{
							"name": "addNewEpisodeFailure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"newEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to insert episode.\"\r\n}"
						},
						{
							"name": "addNewEpisodeSeriesNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"newEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 67474873,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Series not found.\"\r\n}"
						},
						{
							"name": "addNewEpisodeGenreNotFound",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"newEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 785478\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Genre not found.\"\r\n}"
						}
					]
				},
				{
					"name": "updateEpisode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'message'\", function() {\r",
									"    pm.response.to.have.jsonBody('message');\r",
									"});\r",
									"\r",
									"pm.test(\"Message is 'Episode updated successfully.'\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('Episode updated successfully.');\r",
									"});\r",
									"\r",
									"pm.test(\"Episode not found returns 404\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(pm.response.status).to.eql(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"newEpisode\",\r\n    \"duration\": 5555,\r\n    \"season\": 3,\r\n    \"series_id\": 3,\r\n    \"genre_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/episode/21",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"episode",
								"21"
							]
						}
					},
					"response": [
						{
							"name": "updateEpisodeSucces",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Episode updated successfully.\"\r\n}"
						},
						{
							"name": "updateEpisodeFailure",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"3"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update episode. No changes made.\"\r\n}"
						},
						{
							"name": "updateEpisodeNoEpisodeFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/6896",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"6896"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Episode not found.\"\r\n}"
						},
						{
							"name": "updateEpisodeNoGenreFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/5",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"5"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No genre found.\"\r\n}"
						},
						{
							"name": "updateEpisodeNoSeriesFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"updatedEpisode\",\r\n    \"duration\": 5455,\r\n    \"season\": 1,\r\n    \"series_id\": 584388,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/5",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"5"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Series not found\"\r\n}"
						}
					]
				},
				{
					"name": "deleteEpisode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'message'\", function() {\r",
									"    pm.response.to.have.jsonBody('message');\r",
									"});\r",
									"\r",
									"pm.test(\"Message is 'Episode deleted successfully.'\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('Episode deleted successfully.');\r",
									"});\r",
									"\r",
									"pm.test(\"Episode not found returns 404\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(pm.response.status).to.eql(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/episode/21",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"episode",
								"21"
							]
						}
					},
					"response": [
						{
							"name": "deleteEpisodeSuccess",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Episode deleted successfully.\"\r\n}"
						},
						{
							"name": "deleteEpisodeNotFound",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/78659",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"78659"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Episode not found.\"\r\n}"
						},
						{
							"name": "deleteEpisodeFailure",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/episode/3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"episode",
										"3"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to delete episode.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "ViewingClassificationController",
			"item": [
				{
					"name": "getAllClassifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains 'values'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"values\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/classifications/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"classifications",
								""
							]
						}
					},
					"response": [
						{
							"name": "getAllClassificationsNoClassificationsFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No classifications found.\"\r\n}"
						},
						{
							"name": "getAllClassificationsSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"classification_id\": 1,\r\n            \"classification\": \"Over 18\"\r\n        },\r\n        {\r\n            \"classification_id\": 2,\r\n            \"classification\": \"Under 18\"\r\n        }\r\n    ]\r\n}"
						}
					]
				},
				{
					"name": "getClassificationById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the correct classification\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.values[0]).to.have.property(\"classification\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/classifications/1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"classifications",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "getClassificationByIdSuccess",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"values\": [\r\n        {\r\n            \"classifcation_id\": 1,\r\n            \"classification\": \"Over 18\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "getClassificationByIdNotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/9854874",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"9854874"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"No classification found with that id.\"\r\n}"
						}
					]
				},
				{
					"name": "addNewClassification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\", \"Classification inserted successfully.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"classification\": \"Horror\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/classifications/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"classifications",
								""
							]
						}
					},
					"response": [
						{
							"name": "addNewClassificationSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification\": \"Violence\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Classification inserted successfully.\"\r\n}"
						},
						{
							"name": "addNewClassificationFailure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification\": \"Violence\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to insert classification.\"\r\n}"
						}
					]
				},
				{
					"name": "updateClassification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the correct message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"classification\": \"Horror\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/classifications/8",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"classifications",
								"8"
							]
						}
					},
					"response": [
						{
							"name": "updateClassificationSuccess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification\": \"Animals\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Classification updated successfully.\"\r\n}"
						},
						{
							"name": "updateClassificationNotFound",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification\": \"Animals\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/57347634",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"57347634"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Classification not found.\"\r\n}"
						},
						{
							"name": "updateClassificationFailure",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classification\": \"Animals\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"1"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Failed to update classification. No changes made.\"\r\n}"
						}
					]
				},
				{
					"name": "deleteClassification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the correct message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/classifications/8",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"classifications",
								"8"
							]
						}
					},
					"response": [
						{
							"name": "deleteClassificationSuccess",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Classification deleted successfully.\"\r\n}"
						},
						{
							"name": "deleteClassificationFailure",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"1"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"message\": \"Failed to delete classification.\"\r\n}"
						},
						{
							"name": "deleteClassificationNotFound",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/classifications/98645874",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"classifications",
										"98645874"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Classification not found.\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "ExternalAPIController",
			"item": [
				{
					"name": "generateImage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test if the response status code is 201 (Created)\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// Test if the response contains 'prompt' and 'image_url' fields\r",
									"pm.test(\"Response contains 'prompt' and 'image_url'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('prompt');\r",
									"    pm.expect(jsonData).to.have.property('image_url');\r",
									"});\r",
									"\r",
									"// Test if the 'image_url' is a valid URL\r",
									"pm.test(\"Image URL is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var imageUrl = jsonData.image_url;\r",
									"    \r",
									"    pm.expect(imageUrl).to.match(/^https?:\\/\\/.+\\.(jpg|jpeg|png|gif)$/); // Check for valid image URL (ends with .jpg, .jpeg, .png, .gif)\r",
									"});\r",
									"\r",
									"// Test the Content-Type of the response\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"dog\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/external/generate-image",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"external",
								"generate-image"
							]
						}
					},
					"response": [
						{
							"name": "generateImageSuccess",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"dog\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/external/generate-image",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"external",
										"generate-image"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"prompt\": \"dog\",\r\n    \"image_url\": \"generated_images/hjsfdhjf74.jpg\"\r\n}"
						},
						{
							"name": "generateImageFailure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"dog\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/external/generate-image",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"external",
										"generate-image"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Unexpected response from the API.\"\r\n}"
						}
					]
				}
			]
		}
	]
}